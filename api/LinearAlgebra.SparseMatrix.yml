### YamlMime:ManagedReference
items:
- uid: LinearAlgebra.SparseMatrix
  commentId: T:LinearAlgebra.SparseMatrix
  id: SparseMatrix
  parent: LinearAlgebra
  children:
  - LinearAlgebra.SparseMatrix.#ctor(System.Int32,System.Int32)
  - LinearAlgebra.SparseMatrix.#ctor(System.Numerics.Complex[0:,0:])
  - LinearAlgebra.SparseMatrix.Cols
  - LinearAlgebra.SparseMatrix.FromMatrix(LinearAlgebra.Matrix)
  - LinearAlgebra.SparseMatrix.Identity(System.Int32)
  - LinearAlgebra.SparseMatrix.Item(System.Int32,System.Int32)
  - LinearAlgebra.SparseMatrix.Multiply(LinearAlgebra.SparseMatrix)
  - LinearAlgebra.SparseMatrix.MultiplyWithVector(System.Numerics.Complex[])
  - LinearAlgebra.SparseMatrix.ParallelTensorProduct(LinearAlgebra.SparseMatrix)
  - LinearAlgebra.SparseMatrix.Print
  - LinearAlgebra.SparseMatrix.Rows
  - LinearAlgebra.SparseMatrix.TensorProduct(LinearAlgebra.SparseMatrix)
  langs:
  - csharp
  - vb
  name: SparseMatrix
  nameWithType: SparseMatrix
  fullName: LinearAlgebra.SparseMatrix
  type: Class
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: SparseMatrix
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 13
  namespace: LinearAlgebra
  summary: A special representation of a <xref href="LinearAlgebra.Matrix" data-throw-if-not-resolved="false"></xref>. A SparseMatrix stores only the non-zero elements to conserve memory and computation.
  example: []
  syntax:
    content: public class SparseMatrix
    content.vb: Public Class SparseMatrix
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: LinearAlgebra.SparseMatrix.Rows
  commentId: P:LinearAlgebra.SparseMatrix.Rows
  id: Rows
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: SparseMatrix.Rows
  fullName: LinearAlgebra.SparseMatrix.Rows
  type: Property
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: Rows
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 22
  namespace: LinearAlgebra
  summary: The number of rows
  example: []
  syntax:
    content: public int Rows { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Rows As Integer
  overload: LinearAlgebra.SparseMatrix.Rows*
- uid: LinearAlgebra.SparseMatrix.Cols
  commentId: P:LinearAlgebra.SparseMatrix.Cols
  id: Cols
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: Cols
  nameWithType: SparseMatrix.Cols
  fullName: LinearAlgebra.SparseMatrix.Cols
  type: Property
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: Cols
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 27
  namespace: LinearAlgebra
  summary: The number of columns
  example: []
  syntax:
    content: public int Cols { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Cols As Integer
  overload: LinearAlgebra.SparseMatrix.Cols*
- uid: LinearAlgebra.SparseMatrix.#ctor(System.Int32,System.Int32)
  commentId: M:LinearAlgebra.SparseMatrix.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: SparseMatrix(int, int)
  nameWithType: SparseMatrix.SparseMatrix(int, int)
  fullName: LinearAlgebra.SparseMatrix.SparseMatrix(int, int)
  type: Constructor
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: .ctor
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 34
  namespace: LinearAlgebra
  summary: Constructor to initialize a sparse matrix of a given size
  example: []
  syntax:
    content: public SparseMatrix(int rows, int cols)
    parameters:
    - id: rows
      type: System.Int32
      description: ''
    - id: cols
      type: System.Int32
      description: ''
    content.vb: Public Sub New(rows As Integer, cols As Integer)
  overload: LinearAlgebra.SparseMatrix.#ctor*
  nameWithType.vb: SparseMatrix.New(Integer, Integer)
  fullName.vb: LinearAlgebra.SparseMatrix.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: LinearAlgebra.SparseMatrix.#ctor(System.Numerics.Complex[0:,0:])
  commentId: M:LinearAlgebra.SparseMatrix.#ctor(System.Numerics.Complex[0:,0:])
  id: '#ctor(System.Numerics.Complex[0:,0:])'
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: SparseMatrix(Complex[,])
  nameWithType: SparseMatrix.SparseMatrix(Complex[,])
  fullName: LinearAlgebra.SparseMatrix.SparseMatrix(System.Numerics.Complex[,])
  type: Constructor
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: .ctor
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 45
  namespace: LinearAlgebra
  summary: Constructor to initialize a sparse matrix of a given <xref href="LinearAlgebra.Matrix" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public SparseMatrix(Complex[,] matrix)
    parameters:
    - id: matrix
      type: System.Numerics.Complex[,]
      description: ''
    content.vb: Public Sub New(matrix As Complex(,))
  overload: LinearAlgebra.SparseMatrix.#ctor*
  nameWithType.vb: SparseMatrix.New(Complex(,))
  fullName.vb: LinearAlgebra.SparseMatrix.New(System.Numerics.Complex(,))
  name.vb: New(Complex(,))
- uid: LinearAlgebra.SparseMatrix.FromMatrix(LinearAlgebra.Matrix)
  commentId: M:LinearAlgebra.SparseMatrix.FromMatrix(LinearAlgebra.Matrix)
  id: FromMatrix(LinearAlgebra.Matrix)
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: FromMatrix(Matrix)
  nameWithType: SparseMatrix.FromMatrix(Matrix)
  fullName: LinearAlgebra.SparseMatrix.FromMatrix(LinearAlgebra.Matrix)
  type: Method
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: FromMatrix
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 70
  namespace: LinearAlgebra
  summary: A static method to convert a <xref href="LinearAlgebra.Matrix" data-throw-if-not-resolved="false"></xref> to a <xref href="LinearAlgebra.SparseMatrix" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SparseMatrix FromMatrix(Matrix matrix)
    parameters:
    - id: matrix
      type: LinearAlgebra.Matrix
      description: ''
    return:
      type: LinearAlgebra.SparseMatrix
      description: ''
    content.vb: Public Shared Function FromMatrix(matrix As Matrix) As SparseMatrix
  overload: LinearAlgebra.SparseMatrix.FromMatrix*
- uid: LinearAlgebra.SparseMatrix.Item(System.Int32,System.Int32)
  commentId: P:LinearAlgebra.SparseMatrix.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: SparseMatrix.this[int, int]
  fullName: LinearAlgebra.SparseMatrix.this[int, int]
  type: Property
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: this[]
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 97
  namespace: LinearAlgebra
  summary: Index the element at row x col
  example: []
  syntax:
    content: public Complex this[int row, int col] { get; set; }
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: col
      type: System.Int32
      description: ''
    return:
      type: System.Numerics.Complex
      description: ''
    content.vb: Public Default Property this[](row As Integer, col As Integer) As Complex
  overload: LinearAlgebra.SparseMatrix.Item*
  nameWithType.vb: SparseMatrix.this[](Integer, Integer)
  fullName.vb: LinearAlgebra.SparseMatrix.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: LinearAlgebra.SparseMatrix.Multiply(LinearAlgebra.SparseMatrix)
  commentId: M:LinearAlgebra.SparseMatrix.Multiply(LinearAlgebra.SparseMatrix)
  id: Multiply(LinearAlgebra.SparseMatrix)
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: Multiply(SparseMatrix)
  nameWithType: SparseMatrix.Multiply(SparseMatrix)
  fullName: LinearAlgebra.SparseMatrix.Multiply(LinearAlgebra.SparseMatrix)
  type: Method
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: Multiply
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 109
  namespace: LinearAlgebra
  summary: A method to peform the matrix multiplication between two <xref href="LinearAlgebra.SparseMatrix" data-throw-if-not-resolved="false"></xref>. Note that this is a right multiplicaiton, so it computes self * other
  example: []
  syntax:
    content: public SparseMatrix Multiply(SparseMatrix other)
    parameters:
    - id: other
      type: LinearAlgebra.SparseMatrix
      description: ''
    return:
      type: LinearAlgebra.SparseMatrix
      description: ''
    content.vb: Public Function Multiply(other As SparseMatrix) As SparseMatrix
  overload: LinearAlgebra.SparseMatrix.Multiply*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
- uid: LinearAlgebra.SparseMatrix.TensorProduct(LinearAlgebra.SparseMatrix)
  commentId: M:LinearAlgebra.SparseMatrix.TensorProduct(LinearAlgebra.SparseMatrix)
  id: TensorProduct(LinearAlgebra.SparseMatrix)
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: TensorProduct(SparseMatrix)
  nameWithType: SparseMatrix.TensorProduct(SparseMatrix)
  fullName: LinearAlgebra.SparseMatrix.TensorProduct(LinearAlgebra.SparseMatrix)
  type: Method
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: TensorProduct
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 138
  namespace: LinearAlgebra
  summary: A methdo to perform the tensor product with another <xref href="LinearAlgebra.SparseMatrix" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public SparseMatrix TensorProduct(SparseMatrix other)
    parameters:
    - id: other
      type: LinearAlgebra.SparseMatrix
      description: ''
    return:
      type: LinearAlgebra.SparseMatrix
      description: ''
    content.vb: Public Function TensorProduct(other As SparseMatrix) As SparseMatrix
  overload: LinearAlgebra.SparseMatrix.TensorProduct*
- uid: LinearAlgebra.SparseMatrix.ParallelTensorProduct(LinearAlgebra.SparseMatrix)
  commentId: M:LinearAlgebra.SparseMatrix.ParallelTensorProduct(LinearAlgebra.SparseMatrix)
  id: ParallelTensorProduct(LinearAlgebra.SparseMatrix)
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: ParallelTensorProduct(SparseMatrix)
  nameWithType: SparseMatrix.ParallelTensorProduct(SparseMatrix)
  fullName: LinearAlgebra.SparseMatrix.ParallelTensorProduct(LinearAlgebra.SparseMatrix)
  type: Method
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: ParallelTensorProduct
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 172
  namespace: LinearAlgebra
  summary: A method to perform the tensor product with another <xref href="LinearAlgebra.SparseMatrix" data-throw-if-not-resolved="false"></xref> that is parallelized to increase performance on large matrices.
  example: []
  syntax:
    content: public SparseMatrix ParallelTensorProduct(SparseMatrix other)
    parameters:
    - id: other
      type: LinearAlgebra.SparseMatrix
      description: ''
    return:
      type: LinearAlgebra.SparseMatrix
      description: ''
    content.vb: Public Function ParallelTensorProduct(other As SparseMatrix) As SparseMatrix
  overload: LinearAlgebra.SparseMatrix.ParallelTensorProduct*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: ''
- uid: LinearAlgebra.SparseMatrix.MultiplyWithVector(System.Numerics.Complex[])
  commentId: M:LinearAlgebra.SparseMatrix.MultiplyWithVector(System.Numerics.Complex[])
  id: MultiplyWithVector(System.Numerics.Complex[])
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: MultiplyWithVector(Complex[])
  nameWithType: SparseMatrix.MultiplyWithVector(Complex[])
  fullName: LinearAlgebra.SparseMatrix.MultiplyWithVector(System.Numerics.Complex[])
  type: Method
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: MultiplyWithVector
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 229
  namespace: LinearAlgebra
  summary: A method to perform a SparseMatrix * <xref href="LinearAlgebra.Vector" data-throw-if-not-resolved="false"></xref> multiplication
  example: []
  syntax:
    content: public Complex[] MultiplyWithVector(Complex[] vector)
    parameters:
    - id: vector
      type: System.Numerics.Complex[]
      description: ''
    return:
      type: System.Numerics.Complex[]
      description: ''
    content.vb: Public Function MultiplyWithVector(vector As Complex()) As Complex()
  overload: LinearAlgebra.SparseMatrix.MultiplyWithVector*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: SparseMatrix.MultiplyWithVector(Complex())
  fullName.vb: LinearAlgebra.SparseMatrix.MultiplyWithVector(System.Numerics.Complex())
  name.vb: MultiplyWithVector(Complex())
- uid: LinearAlgebra.SparseMatrix.Print
  commentId: M:LinearAlgebra.SparseMatrix.Print
  id: Print
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: Print()
  nameWithType: SparseMatrix.Print()
  fullName: LinearAlgebra.SparseMatrix.Print()
  type: Method
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: Print
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 252
  namespace: LinearAlgebra
  summary: Method to display the sparse matrix (for debugging purposes)
  example: []
  syntax:
    content: public void Print()
    content.vb: Public Sub Print()
  overload: LinearAlgebra.SparseMatrix.Print*
- uid: LinearAlgebra.SparseMatrix.Identity(System.Int32)
  commentId: M:LinearAlgebra.SparseMatrix.Identity(System.Int32)
  id: Identity(System.Int32)
  parent: LinearAlgebra.SparseMatrix
  langs:
  - csharp
  - vb
  name: Identity(int)
  nameWithType: SparseMatrix.Identity(int)
  fullName: LinearAlgebra.SparseMatrix.Identity(int)
  type: Method
  source:
    remote:
      path: src/LinearAlgebra/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/0RenDev/Quantum-Computing-Tool.git
    id: Identity
    path: src/LinearAlgebra/SparseMatrix.cs
    startLine: 269
  namespace: LinearAlgebra
  summary: Return the identity matrix as a SparseMatrix
  example: []
  syntax:
    content: public static SparseMatrix Identity(int size)
    parameters:
    - id: size
      type: System.Int32
      description: ''
    return:
      type: LinearAlgebra.SparseMatrix
      description: ''
    content.vb: Public Shared Function Identity(size As Integer) As SparseMatrix
  overload: LinearAlgebra.SparseMatrix.Identity*
  nameWithType.vb: SparseMatrix.Identity(Integer)
  fullName.vb: LinearAlgebra.SparseMatrix.Identity(Integer)
  name.vb: Identity(Integer)
references:
- uid: LinearAlgebra.Matrix
  commentId: T:LinearAlgebra.Matrix
  parent: LinearAlgebra
  href: LinearAlgebra.Matrix.html
  name: Matrix
  nameWithType: Matrix
  fullName: LinearAlgebra.Matrix
- uid: LinearAlgebra
  commentId: N:LinearAlgebra
  href: LinearAlgebra.html
  name: LinearAlgebra
  nameWithType: LinearAlgebra
  fullName: LinearAlgebra
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LinearAlgebra.SparseMatrix.Rows*
  commentId: Overload:LinearAlgebra.SparseMatrix.Rows
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_Rows
  name: Rows
  nameWithType: SparseMatrix.Rows
  fullName: LinearAlgebra.SparseMatrix.Rows
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LinearAlgebra.SparseMatrix.Cols*
  commentId: Overload:LinearAlgebra.SparseMatrix.Cols
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_Cols
  name: Cols
  nameWithType: SparseMatrix.Cols
  fullName: LinearAlgebra.SparseMatrix.Cols
- uid: LinearAlgebra.SparseMatrix.#ctor*
  commentId: Overload:LinearAlgebra.SparseMatrix.#ctor
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix__ctor_System_Int32_System_Int32_
  name: SparseMatrix
  nameWithType: SparseMatrix.SparseMatrix
  fullName: LinearAlgebra.SparseMatrix.SparseMatrix
  nameWithType.vb: SparseMatrix.New
  fullName.vb: LinearAlgebra.SparseMatrix.New
  name.vb: New
- uid: System.Numerics.Complex[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex[,]
  nameWithType: Complex[,]
  fullName: System.Numerics.Complex[,]
  nameWithType.vb: Complex(,)
  fullName.vb: System.Numerics.Complex(,)
  name.vb: Complex(,)
  spec.csharp:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: (
  - name: ','
  - name: )
- uid: LinearAlgebra.SparseMatrix
  commentId: T:LinearAlgebra.SparseMatrix
  parent: LinearAlgebra
  href: LinearAlgebra.SparseMatrix.html
  name: SparseMatrix
  nameWithType: SparseMatrix
  fullName: LinearAlgebra.SparseMatrix
- uid: LinearAlgebra.SparseMatrix.FromMatrix*
  commentId: Overload:LinearAlgebra.SparseMatrix.FromMatrix
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_FromMatrix_LinearAlgebra_Matrix_
  name: FromMatrix
  nameWithType: SparseMatrix.FromMatrix
  fullName: LinearAlgebra.SparseMatrix.FromMatrix
- uid: LinearAlgebra.SparseMatrix.Item*
  commentId: Overload:LinearAlgebra.SparseMatrix.Item
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_Item_System_Int32_System_Int32_
  name: this
  nameWithType: SparseMatrix.this
  fullName: LinearAlgebra.SparseMatrix.this
  nameWithType.vb: SparseMatrix.this[]
  fullName.vb: LinearAlgebra.SparseMatrix.this[]
  name.vb: this[]
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: LinearAlgebra.SparseMatrix.Multiply*
  commentId: Overload:LinearAlgebra.SparseMatrix.Multiply
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_Multiply_LinearAlgebra_SparseMatrix_
  name: Multiply
  nameWithType: SparseMatrix.Multiply
  fullName: LinearAlgebra.SparseMatrix.Multiply
- uid: LinearAlgebra.SparseMatrix.TensorProduct*
  commentId: Overload:LinearAlgebra.SparseMatrix.TensorProduct
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_TensorProduct_LinearAlgebra_SparseMatrix_
  name: TensorProduct
  nameWithType: SparseMatrix.TensorProduct
  fullName: LinearAlgebra.SparseMatrix.TensorProduct
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullreferenceexception
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: LinearAlgebra.SparseMatrix.ParallelTensorProduct*
  commentId: Overload:LinearAlgebra.SparseMatrix.ParallelTensorProduct
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_ParallelTensorProduct_LinearAlgebra_SparseMatrix_
  name: ParallelTensorProduct
  nameWithType: SparseMatrix.ParallelTensorProduct
  fullName: LinearAlgebra.SparseMatrix.ParallelTensorProduct
- uid: LinearAlgebra.Vector
  commentId: T:LinearAlgebra.Vector
  parent: LinearAlgebra
  href: LinearAlgebra.Vector.html
  name: Vector
  nameWithType: Vector
  fullName: LinearAlgebra.Vector
- uid: LinearAlgebra.SparseMatrix.MultiplyWithVector*
  commentId: Overload:LinearAlgebra.SparseMatrix.MultiplyWithVector
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_MultiplyWithVector_System_Numerics_Complex___
  name: MultiplyWithVector
  nameWithType: SparseMatrix.MultiplyWithVector
  fullName: LinearAlgebra.SparseMatrix.MultiplyWithVector
- uid: System.Numerics.Complex[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex[]
  nameWithType: Complex[]
  fullName: System.Numerics.Complex[]
  nameWithType.vb: Complex()
  fullName.vb: System.Numerics.Complex()
  name.vb: Complex()
  spec.csharp:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: (
  - name: )
- uid: LinearAlgebra.SparseMatrix.Print*
  commentId: Overload:LinearAlgebra.SparseMatrix.Print
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_Print
  name: Print
  nameWithType: SparseMatrix.Print
  fullName: LinearAlgebra.SparseMatrix.Print
- uid: LinearAlgebra.SparseMatrix.Identity*
  commentId: Overload:LinearAlgebra.SparseMatrix.Identity
  href: LinearAlgebra.SparseMatrix.html#LinearAlgebra_SparseMatrix_Identity_System_Int32_
  name: Identity
  nameWithType: SparseMatrix.Identity
  fullName: LinearAlgebra.SparseMatrix.Identity
